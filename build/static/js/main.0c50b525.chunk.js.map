{"version":3,"sources":["services/blogs.js","components/Blog.js","services/login.js","components/loginForm.js","reducers/blogReducer.js","components/blogForm.js","components/toggalable.js","components/Notification.js","components/Users.js","components/User.js","components/Singleblog.js","App.js","reducers/loginReducer.js","services/users.js","reducers/usersReducer.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","createNew","author","title","url","config","headers","Authorization","object","likes","post","setToken","newToken","addLike","newObject","put","id","then","deleteBlog","request","delete","includes","addComment","comment","Blog","blog","dispatch","useDispatch","blogs","useSelector","state","blogService","newLike","deletedBlog","TableContainer","component","Paper","Table","TableBody","map","TableRow","key","TableCell","to","onClick","login","credentials","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","TextField","value","onChange","type","Button","variant","initializeBlogs","blogReducer","action","updatedBlogs","b","filter","BlogForm","newBlogRef","React","createRef","addBlog","event","preventDefault","target","newBlog","ref","name","Togglable","forwardRef","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","className","children","Notification","message","Users","users","u","length","User","match","useRouteMatch","user","find","params","console","log","Singleblog","newComment","comments","c","App","setBlogs","setUsername","setPassword","setUser","errorMessage","setErrorMessage","loginVisible","setLoginVisible","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogObject","blogFormRef","current","create","returnedBlog","concat","handleLogin","loginService","setItem","stringify","setTimeout","handleLogout","removeItem","location","reload","padding","Container","AppBar","position","Toolbar","IconButton","edge","color","aria-label","loginForm","createBlog","path","loginReducer","usersReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","usersService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c50b525.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst createNew = async (author, title, url) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const object = { author, title, url, likes: 0 };\r\n  const response = await axios.post(baseUrl, object, config);\r\n  return response.data;\r\n};\r\n\r\nconst addLike = newObject => {\r\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteBlog = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  if (request.includes(\"object\")) {\r\n    return null;\r\n  } else {\r\n    return request.then(response => response.data);\r\n  }\r\n};\r\n\r\nconst addComment = async (id, comment) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const object = { comment };\r\n  const response = await axios.post(\r\n    `${baseUrl}/${id}/comments`,\r\n    object,\r\n    config\r\n  );\r\n  return response.data;\r\n};\r\n// const deleteBlog = (id)\r\nexport default { getAll, createNew, setToken, addLike, deleteBlog, addComment };\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport blogService from \"../services/blogs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nconst Blog = ({ blog, title, author, url, likes }) => {\r\n  const dispatch = useDispatch();\r\n  const blogs = useSelector(state => state.blogs);\r\n\r\n  const addLike = async (id, author, title, url, likes) => {\r\n    const newObject = {\r\n      id: id,\r\n      author: author,\r\n      title: title,\r\n      url: url,\r\n      likes: likes + 1\r\n    };\r\n    const newLike = await blogService.addLike(newObject);\r\n    dispatch(addLike(newLike));\r\n  };\r\n\r\n  const deleteBlog = async id => {\r\n    const deletedBlog = await blogService.deleteBlog(id);\r\n    dispatch(deleteBlog(deletedBlog));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableBody>\r\n            {blogs.map(blog => (\r\n              <TableRow key={blog.id}>\r\n                <TableCell>{blog.author} </TableCell>\r\n                <TableCell>\r\n                  <Link to={`/blogs/${blog.id}`}> {blog.title}</Link>\r\n                </TableCell>\r\n                <TableCell>{blog.url} </TableCell>\r\n                <TableCell>likes: {blog.likes}</TableCell>\r\n                <TableCell>\r\n                  <button\r\n                    onClick={() =>\r\n                      addLike(\r\n                        blog.id,\r\n                        blog.author,\r\n                        blog.title,\r\n                        blog.url,\r\n                        blog.likes\r\n                      )\r\n                    }\r\n                  >\r\n                    Like\r\n                  </button>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <button onClick={() => deleteBlog(blog.id)}>Delete</button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login, getAll };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <TextField\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <Button variant=\"contained\" id=\"login-button\" type=\"submit\">\r\n          login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n};\r\n\r\nexport default LoginForm;\r\n","//const generateId = () => Number((Math.random() * 1000000).toFixed(0));\r\n\r\nimport blogService from \"../services/blogs\";\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data];\r\n    case \"INIT_BLOGS\":\r\n      return action.data;\r\n    case \"LIKE_BLOG\":\r\n      const id = action.data.id;\r\n      {\r\n        const updatedBlogs = state.map(b =>\r\n          b.id === action.data.id ? action.data : b\r\n        );\r\n        return updatedBlogs;\r\n      }\r\n    case \"DELETE_BLOG\":\r\n      return state.filter(blog => blog.id !== id);\r\n    case \"ADD_COMMENT\":\r\n      const updatedBlogs = state.map(b =>\r\n        b.id === action.data.id ? action.data : b\r\n      );\r\n      return updatedBlogs;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeBlogs = blogs => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll();\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: blogs\r\n    });\r\n  };\r\n};\r\n\r\nexport const addLike = newObject => {\r\n  return async dispatch => {\r\n    const newLike = await blogService.addLike(newObject);\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: newLike\r\n    });\r\n  };\r\n};\r\n\r\nexport const createBlog = data => {\r\n  return {\r\n    type: \"NEW_BLOG\",\r\n    data\r\n  };\r\n};\r\n\r\nexport const deleteBlog = id => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.deleteBlog(id);\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: deletedBlog\r\n    });\r\n  };\r\n};\r\n\r\nexport const addComment = (id, comment) => {\r\n  return async dispatch => {\r\n    const updatedBlog = await blogService.addComment(id, comment);\r\n    dispatch({\r\n      type: \"ADD_COMMENT\",\r\n      data: updatedBlog\r\n    });\r\n  };\r\n};\r\n\r\nexport default blogReducer;\r\n","import React from \"react\";\r\nimport { createBlog } from \"../reducers/blogReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst BlogForm = () => {\r\n  const dispatch = useDispatch();\r\n  const newBlogRef = React.createRef();\r\n  const addBlog = async event => {\r\n    event.preventDefault();\r\n    const title = event.target.title.value;\r\n    const author = event.target.author.value;\r\n    const url = event.target.url.value;\r\n    event.target.title.value = \"\";\r\n    event.target.author.value = \"\";\r\n    event.target.url.value = \"\";\r\n    const newBlog = await blogService.createNew(author, title, url);\r\n    dispatch(createBlog(newBlog));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new blogpost</h2>\r\n      <form onSubmit={addBlog} ref={newBlogRef}>\r\n        <input id=\"title\" name=\"title\" />\r\n        <input id=\"author\" name=\"author\" />\r\n        <input id=\"url\" name=\"url\" />\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogForm;\r\n","import React, { useState, useImperativeHandle } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Togglable;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Users = () => {\r\n  const users = useSelector(state => state.users);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {users.map(u => (\r\n          <li key={u.id}>\r\n            <Link to={`/users/${u.id}`}> {u.username}</Link> {u.blogs.length}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst User = () => {\r\n  const users = useSelector(state => state.users);\r\n\r\n  const match = useRouteMatch(\"/users/:id\");\r\n\r\n  const user = match ? users.find(user => user.id === match.params.id) : null;\r\n\r\n  console.log(users);\r\n\r\n  if (!user) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>{user.username}</h1> <h2>Added Blogs</h2>\r\n        <ul>\r\n          {user.blogs.map(b => (\r\n            <li key={b.id}>\r\n              <h2>{b.title}</h2>\r\n              <p>{b.url}</p>\r\n              <p>{b.author}</p>\r\n              <p>{b.likes}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default User;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst Singleblog = () => {\r\n  const dispatch = useDispatch();\r\n  const blogs = useSelector(state => state.blogs);\r\n\r\n  const match = useRouteMatch(\"/blogs/:id\");\r\n\r\n  const addComment = async event => {\r\n    const comment = event.target.comment.value;\r\n    event.target.comment.value = \"\";\r\n    const id = blog.id;\r\n    const newComment = await blogService.addComment(id, comment);\r\n    dispatch(addComment(newComment));\r\n  };\r\n\r\n  const addLike = async (id, author, title, url, likes) => {\r\n    const newObject = {\r\n      id: id,\r\n      author: author,\r\n      title: title,\r\n      url: url,\r\n      likes: likes + 1\r\n    };\r\n    const newLike = await blogService.addLike(newObject);\r\n    dispatch(addLike(newLike));\r\n  };\r\n\r\n  const blog = match ? blogs.find(blog => blog.id === match.params.id) : null;\r\n\r\n  console.log(blog);\r\n  if (!blog) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>Blogs</h2>\r\n        <h2>{blog.title}</h2>\r\n        <p> URL: {blog.url}</p>\r\n        <p>\r\n          {\" \"}\r\n          Likes: {blog.likes}{\" \"}\r\n          <button\r\n            onClick={() =>\r\n              addLike(blog.id, blog.author, blog.title, blog.url, blog.likes)\r\n            }\r\n          >\r\n            Like\r\n          </button>\r\n        </p>\r\n        <p> Added by: {blog.user.username}</p>\r\n        <h2>Comments</h2>\r\n        <form onSubmit={addComment}>\r\n          <input id=\"comment\" name=\"comment\"></input>\r\n          <button>Add Comment</button>\r\n        </form>\r\n        <ul>\r\n          {blog.comments.map(c => (\r\n            <li key={c.id}>{c.comment}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Singleblog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Blog from \"./components/Blog\";\r\nimport blogService from \"./services/blogs\";\r\nimport loginService from \"./services/login\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport BlogForm from \"./components/blogForm\";\r\nimport Togglable from \"./components/toggalable\";\r\nimport Notification from \"./components/Notification\";\r\nimport { initializeBlogs } from \"./reducers/blogReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Users from \"./components/Users\";\r\nimport User from \"./components/User\";\r\nimport Singleblog from \"./components/Singleblog\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [loginVisible, setLoginVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const addBlog = blogObject => {\r\n    blogFormRef.current.toggleVisibility();\r\n    blogService.create(blogObject).then(returnedBlog => {\r\n      setBlogs(blogs.concat(returnedBlog));\r\n    });\r\n  };\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      });\r\n\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user));\r\n      blogService.setToken(user.token);\r\n      setUser(user);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (exception) {\r\n      setErrorMessage(\"Wrong credentials\");\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs => dispatch(initializeBlogs(blogs)));\r\n  }, [dispatch]);\r\n\r\n  //useEffect(() => {\r\n  //  dispatch(initializeBlogs());\r\n  //}, [dispatch]);\r\n\r\n  const handleLogout = async event => {\r\n    event.preventDefault();\r\n    window.localStorage.removeItem(\"loggedBlogappUser\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const loginForm = () => {\r\n    const hideWhenVisible = { display: loginVisible ? \"none\" : \"\" };\r\n    const showWhenVisible = { display: loginVisible ? \"\" : \"none\" };\r\n\r\n    return (\r\n      <div>\r\n        <div style={hideWhenVisible}>\r\n          <Button variant=\"contained\" onClick={() => setLoginVisible(true)}>\r\n            log in\r\n          </Button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n          <Button variant=\"contained\" onClick={() => setLoginVisible(false)}>\r\n            cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const blogFormRef = React.createRef();\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new post\" ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  );\r\n\r\n  //  const Notification = () => {\r\n  //    return (\r\n  //      <div className=\"error\">\r\n  //        <p>Sorry, there was an error</p>\r\n  //      </div>\r\n  //    );\r\n  //  };\r\n\r\n  const padding = {\r\n    padding: 5\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            ></IconButton>\r\n            <Button color=\"inherit\">\r\n              <Link style={padding} to=\"/users\">\r\n                Users\r\n              </Link>\r\n            </Button>\r\n            <Button color=\"inherit\">\r\n              <Link style={padding} to=\"/blogs\">\r\n                Blogs\r\n              </Link>\r\n            </Button>\r\n            <Button color=\"inherit\">\r\n              {user ? (\r\n                <em>{user.username} logged in</em>\r\n              ) : (\r\n                <Link style={padding} to=\"/login\">\r\n                  login\r\n                </Link>\r\n              )}\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          <h1>Blogposts</h1>\r\n          <Notification message={errorMessage} />\r\n          {user === null ? (\r\n            loginForm()\r\n          ) : (\r\n            <div>\r\n              <button onClick={handleLogout}>logout</button> {blogForm()}\r\n            </div>\r\n          )}\r\n\r\n          <Switch>\r\n            <Route path=\"/blogs/:id\">\r\n              <Singleblog />\r\n            </Route>\r\n            <Route path=\"/blogs\">\r\n              <Blog />\r\n            </Route>\r\n          </Switch>\r\n          <Switch>\r\n            <Route path=\"/users/:id\">\r\n              <User />\r\n            </Route>\r\n            <Route path=\"/users\">\r\n              <Users />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import loginService from \"../services/login\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst loginReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_LOGIN\":\r\n      return action.data;\r\n    case \"SET_TOKEN\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setToken = token => {\r\n  return async dispatch => {\r\n    await blogService.setToken(token);\r\n    dispatch({\r\n      type: \"SET_TOKEN\"\r\n    });\r\n  };\r\n};\r\n\r\nexport const initializeLogin = login => {\r\n  return async dispatch => {\r\n    const login = await loginService.getAll();\r\n    dispatch({\r\n      type: \"INIT_LOGIN\",\r\n      data: login\r\n    });\r\n  };\r\n};\r\n\r\nexport default loginReducer;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/users\";\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll };\r\n","import usersService from \"../services/users\";\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_USERS\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeUsers = users => {\r\n  return async dispatch => {\r\n    const users = await usersService.getAll();\r\n    dispatch({\r\n      type: \"INIT_USERS\",\r\n      data: users\r\n    });\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport blogReducer, { initializeBlogs } from \"./reducers/blogReducer\";\r\nimport blogService from \"./services/blogs\";\r\nimport loginReducer, { initializeLogin } from \"./reducers/loginReducer\";\r\nimport loginService from \"./services/login\";\r\nimport usersReducer, { initializeUsers } from \"./reducers/usersReducer\";\r\nimport usersService from \"./services/users\";\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  login: loginReducer,\r\n  users: usersReducer\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nblogService.getAll().then(blogs => store.dispatch(initializeBlogs(blogs)));\r\n\r\nloginService.getAll().then(login => store.dispatch(initializeLogin(login)));\r\n\r\nusersService.getAll().then(users => store.dispatch(initializeUsers(users)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}