{"version":3,"sources":["services/blogs.js","components/Blog.js","services/login.js","components/loginForm.js","reducers/blogReducer.js","components/blogForm.js","components/toggalable.js","components/Notification.js","components/Users.js","App.js","reducers/loginReducer.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","createNew","author","title","url","config","headers","Authorization","object","likes","post","setToken","newToken","addLike","newObject","put","id","then","deleteBlog","request","delete","includes","Blog","blog","dispatch","useDispatch","blogs","useSelector","state","blogService","newLike","deletedBlog","map","key","onClick","login","credentials","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","initializeBlogs","blogReducer","action","blogToChange","find","b","changedBlog","filter","BlogForm","newBlogRef","React","createRef","addBlog","event","preventDefault","target","newBlog","ref","name","Togglable","forwardRef","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","className","children","Notification","message","Users","console","log","l","App","setBlogs","setUsername","setPassword","user","setUser","errorMessage","setErrorMessage","loginVisible","setLoginVisible","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogObject","blogFormRef","current","create","returnedBlog","concat","handleLogin","loginService","setItem","stringify","setTimeout","handleLogout","removeItem","location","reload","loginForm","createBlog","loginReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d66fcdc.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3015/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst createNew = async (author, title, url) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const object = { author, title, url, likes: 0 };\r\n  const response = await axios.post(baseUrl, object, config);\r\n  return response.data;\r\n};\r\n\r\nconst addLike = newObject => {\r\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteBlog = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  if (request.includes(\"object\")) {\r\n    return null;\r\n  } else {\r\n    return request.then(response => response.data);\r\n  }\r\n};\r\n\r\n// const deleteBlog = (id)\r\nexport default { getAll, createNew, setToken, addLike, deleteBlog };\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst Blog = ({ blog, title, author, url }) => {\r\n  const dispatch = useDispatch();\r\n  const blogs = useSelector(state => state.blogs);\r\n\r\n  const addLike = async (id, author, title, url, likes) => {\r\n    const newObject = {\r\n      id: id,\r\n      author: author,\r\n      title: title,\r\n      url: url,\r\n      likes: likes + 1\r\n    };\r\n    const newLike = await blogService.addLike(newObject);\r\n    dispatch(addLike(newLike));\r\n  };\r\n\r\n  const deleteBlog = async id => {\r\n    const deletedBlog = await blogService.deleteBlog(id);\r\n    dispatch(deleteBlog(deletedBlog));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {blogs.map(blog => (\r\n          <li key={blog.id}>\r\n            {blog.author} {blog.title} {blog.url} likes: {blog.likes}\r\n            <button\r\n              onClick={() =>\r\n                addLike(blog.id, blog.author, blog.title, blog.url, blog.likes)\r\n              }\r\n            >\r\n              Like\r\n            </button>\r\n            <button onClick={() => deleteBlog(blog.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3015/api/users\";\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login, getAll };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id=\"login-button\" type=\"submit\">\r\n          login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n};\r\n\r\nexport default LoginForm;\r\n","//const generateId = () => Number((Math.random() * 1000000).toFixed(0));\r\n\r\nimport blogService from \"../services/blogs\";\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"NEW_BLOG\":\r\n      return [...state, action.data];\r\n    case \"INIT_BLOGS\":\r\n      return action.data;\r\n    case \"LIKE_BLOG\":\r\n      const id = action.data.id;\r\n      const blogToChange = state.find(b => b.id === id);\r\n      const likes = action.data.likes;\r\n      const changedBlog = {\r\n        ...blogToChange,\r\n        likes: likes + 1\r\n      };\r\n\r\n      return state.map(blog => (blog.id !== id ? blog : changedBlog));\r\n    case \"DELETE_BLOG\":\r\n      return state.filter(blog => blog.id !== id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeBlogs = blogs => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll();\r\n    dispatch({\r\n      type: \"INIT_BLOGS\",\r\n      data: blogs\r\n    });\r\n  };\r\n};\r\n\r\nexport const addLike = newObject => {\r\n  return async dispatch => {\r\n    const newLike = await blogService.addLike(newObject);\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: newLike\r\n    });\r\n  };\r\n};\r\n\r\nexport const createBlog = data => {\r\n  return {\r\n    type: \"NEW_BLOG\",\r\n    data\r\n  };\r\n};\r\n\r\nexport const deleteBlog = id => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.deleteBlog(id);\r\n    dispatch({\r\n      type: \"DELETE_BLOG\",\r\n      data: deletedBlog\r\n    });\r\n  };\r\n};\r\n\r\nexport default blogReducer;\r\n","import React from \"react\";\r\nimport { createBlog } from \"../reducers/blogReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst BlogForm = () => {\r\n  const dispatch = useDispatch();\r\n  const newBlogRef = React.createRef();\r\n  const addBlog = async event => {\r\n    event.preventDefault();\r\n    const title = event.target.title.value;\r\n    const author = event.target.author.value;\r\n    const url = event.target.url.value;\r\n    event.target.title.value = \"\";\r\n    event.target.author.value = \"\";\r\n    event.target.url.value = \"\";\r\n    const newBlog = await blogService.createNew(author, title, url);\r\n    dispatch(createBlog(newBlog));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new blogpost</h2>\r\n      <form onSubmit={addBlog} ref={newBlogRef}>\r\n        <input id=\"title\" name=\"title\" />\r\n        <input id=\"author\" name=\"author\" />\r\n        <input id=\"url\" name=\"url\" />\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogForm;\r\n","import React, { useState, useImperativeHandle } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Togglable;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Users = () => {\r\n  const login = useSelector(state => state.login);\r\n\r\n  const specificUser = id => login.find(l => l.id === id);\r\n\r\n  console.log(specificUser);\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {login.map(l => (\r\n          <li key={l.id}>{l.username}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Blog from \"./components/Blog\";\r\nimport blogService from \"./services/blogs\";\r\nimport loginService from \"./services/login\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport BlogForm from \"./components/blogForm\";\r\nimport Togglable from \"./components/toggalable\";\r\nimport Notification from \"./components/Notification\";\r\nimport { initializeBlogs } from \"./reducers/blogReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Users from \"./components/Users\";\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [loginVisible, setLoginVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  const addBlog = blogObject => {\r\n    blogFormRef.current.toggleVisibility();\r\n    blogService.create(blogObject).then(returnedBlog => {\r\n      setBlogs(blogs.concat(returnedBlog));\r\n    });\r\n  };\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      });\r\n\r\n      window.localStorage.setItem(\"loggedBlogappUser\", JSON.stringify(user));\r\n      blogService.setToken(user.token);\r\n      setUser(user);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (exception) {\r\n      setErrorMessage(\"Wrong credentials\");\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs => dispatch(initializeBlogs(blogs)));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs());\r\n  }, [dispatch]);\r\n\r\n  const handleLogout = async event => {\r\n    event.preventDefault();\r\n    window.localStorage.removeItem(\"loggedBlogappUser\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const loginForm = () => {\r\n    const hideWhenVisible = { display: loginVisible ? \"none\" : \"\" };\r\n    const showWhenVisible = { display: loginVisible ? \"\" : \"none\" };\r\n\r\n    return (\r\n      <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={() => setLoginVisible(true)}>log in</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const blogFormRef = React.createRef();\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new post\" ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  );\r\n\r\n  //  const Notification = () => {\r\n  //    return (\r\n  //      <div className=\"error\">\r\n  //        <p>Sorry, there was an error</p>\r\n  //      </div>\r\n  //    );\r\n  //  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogposts</h1>\r\n      <Notification message={errorMessage} />\r\n      {user === null ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          <p>{user.username} logged in</p>\r\n          <button onClick={handleLogout}>logout</button> {blogForm()}\r\n        </div>\r\n      )}\r\n      <h2>blogs</h2>\r\n\r\n      <Blog />\r\n      <Users />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import loginService from \"../services/login\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nconst loginReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_LOGIN\":\r\n      return action.data;\r\n    case \"SET_TOKEN\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setToken = token => {\r\n  return async dispatch => {\r\n    await blogService.setToken(token);\r\n    dispatch({\r\n      type: \"SET_TOKEN\"\r\n    });\r\n  };\r\n};\r\n\r\nexport const initializeLogin = login => {\r\n  return async dispatch => {\r\n    const login = await loginService.getAll();\r\n    dispatch({\r\n      type: \"INIT_LOGIN\",\r\n      data: login\r\n    });\r\n  };\r\n};\r\n\r\nexport default loginReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport blogReducer, { initializeBlogs } from \"./reducers/blogReducer\";\r\nimport blogService from \"./services/blogs\";\r\nimport loginReducer, { initializeLogin } from \"./reducers/loginReducer\";\r\nimport loginService from \"./services/login\";\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  login: loginReducer\r\n});\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nblogService.getAll().then(blogs => store.dispatch(initializeBlogs(blogs)));\r\n\r\nloginService.getAll().then(login => store.dispatch(initializeLogin(login)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}